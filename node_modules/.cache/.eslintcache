[{"/home/root-pc/Desktop/INTERN/projects/my-app/src/index.tsx":"1","/home/root-pc/Desktop/INTERN/projects/my-app/src/reportWebVitals.ts":"2","/home/root-pc/Desktop/INTERN/projects/my-app/src/App.tsx":"3","/home/root-pc/Desktop/INTERN/projects/my-app/src/components/EditableTable.tsx":"4","/home/root-pc/Desktop/INTERN/projects/my-app/src/components/Login.tsx":"5","/home/root-pc/Desktop/INTERN/projects/my-app/src/components/Signup.tsx":"6","/home/root-pc/Desktop/INTERN/projects/my-app/src/components/Head.tsx":"7","/home/root-pc/Desktop/INTERN/projects/my-app/src/components/PageNotFound.tsx":"8"},{"size":633,"mtime":1627538622334,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1627537579775,"results":"11","hashOfConfig":"10"},{"size":739,"mtime":1627628355944,"results":"12","hashOfConfig":"10"},{"size":6881,"mtime":1627629809232,"results":"13","hashOfConfig":"10"},{"size":2453,"mtime":1627624811904,"results":"14","hashOfConfig":"10"},{"size":4252,"mtime":1627562281091,"results":"15","hashOfConfig":"10"},{"size":356,"mtime":1627559717013,"results":"16","hashOfConfig":"10"},{"size":2220,"mtime":1627628439627,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"1nlc0wu",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"21"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"21"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/root-pc/Desktop/INTERN/projects/my-app/src/index.tsx",["38","39","40"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Switch,Link,BrowserRouter ,Route} from 'react-router-dom'\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["41","42"],"/home/root-pc/Desktop/INTERN/projects/my-app/src/reportWebVitals.ts",[],"/home/root-pc/Desktop/INTERN/projects/my-app/src/App.tsx",["43","44"],"/home/root-pc/Desktop/INTERN/projects/my-app/src/components/EditableTable.tsx",["45","46","47","48","49","50"],"/home/root-pc/Desktop/INTERN/projects/my-app/src/components/Login.tsx",["51","52"],"import { Form, Input, Button, Checkbox, Row, Col } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router\";\n\nconst Login = () => {\n  const onFinish = (values: any) => {\n    console.log(\"Received values of form: \", values);\n  };\n\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  let history = useHistory();\n  const handleSubmit = (e: { preventDefault: () => void }) => {\n    e.preventDefault();\n    console.log(name + \"\" + password);\n\n    history.push(\"/table\");\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row justify-content-center\">\n        <div className=\"form-group col-md-4 col-md-offset-5 align-center\">\n          <Form\n            name=\"normal_login\"\n            className=\"login-form\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n          >\n            <Form.Item\n              name=\"username\"\n              rules={[\n                { required: true, message: \"Please input your Username!\" },\n              ]}\n            >\n              <Input\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"Username\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"password\"\n              rules={[\n                { required: true, message: \"Please input your Password!\" },\n              ]}\n            >\n              <Input\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                type=\"password\"\n                placeholder=\"Password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </Form.Item>\n            <Form.Item>\n              <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n                <Checkbox>Remember me</Checkbox>\n              </Form.Item>\n            </Form.Item>\n\n            <Form.Item>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-form-button\"\n                onClick={handleSubmit}\n              >\n                Log in\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","/home/root-pc/Desktop/INTERN/projects/my-app/src/components/Signup.tsx",["53","54","55","56","57","58","59"],"import { Form, Input, Button, Checkbox } from \"antd\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Signup = () => {\n  const onFinish = (values: any) => {\n    console.log(\"Success:\", values);\n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  let history = useHistory();\n  const handleSubmit = () => {\n    history.push(\"/login\");\n  };\n\n  return (\n    <div className=\"container h-100\">\n      <div className=\"row d-flex justify-content-center align-items-center h-100\">\n        <div className=\"col-lg-12 col-xl-11\">\n          <div className=\"card text-black\">\n            <div className=\"card-body p-md-5\">\n              <div className=\"row justify-content-center\">\n                <div className=\"col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1\">\n                  <p className=\"text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4\">\n                    Sign up\n                  </p>\n\n                  <form className=\"mx-1 mx-md-4\">\n                    <div className=\"d-flex flex-row align-items-center mb-4\">\n                      <i className=\"fas fa-user fa-lg me-3 fa-fw\"></i>\n                      <div className=\"form-outline flex-fill mb-0\">\n                        <input\n                          type=\"text\"\n                          id=\"form3Example1c\"\n                          className=\"form-control\"\n                          value={name}\n                          onChange={(e) => setName(e.target.value)}\n                        />\n                        <label className=\"form-label\" htmlFor=\"form3Example1c\">\n                          Your Name\n                        </label>\n                      </div>\n                    </div>\n\n                    <div className=\"d-flex flex-row align-items-center mb-4\">\n                      <i className=\"fas fa-envelope fa-lg me-3 fa-fw\"></i>\n                      <div className=\"form-outline flex-fill mb-0\">\n                        <input\n                          type=\"email\"\n                          id=\"form3Example3c\"\n                          className=\"form-control\"\n                          value={email}\n                          onChange={(e) => setEmail(e.target.value)}\n                        />\n                        <label className=\"form-label\" htmlFor=\"form3Example3c\">\n                          Your Email\n                        </label>\n                      </div>\n                    </div>\n\n                    <div className=\"d-flex flex-row align-items-center mb-4\">\n                      <i className=\"fas fa-lock fa-lg me-3 fa-fw\"></i>\n                      <div className=\"form-outline flex-fill mb-0\">\n                        <input\n                          type=\"password\"\n                          id=\"form3Example4c\"\n                          className=\"form-control\"\n                          value={password}\n                          onChange={(e) => setPassword(e.target.value)}\n                        />\n                        <label className=\"form-label\" htmlFor=\"form3Example4c\">\n                          Password\n                        </label>\n                      </div>\n                    </div>\n\n                    <div className=\"d-flex justify-content-center mx-4 mb-3 mb-lg-4\">\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-primary btn-lg\"\n                        onClick={handleSubmit}\n                      >\n                        Register\n                      </button>\n                    </div>\n                  </form>\n                </div>\n                <div className=\"col-md-10 col-lg-6 col-xl-7 d-flex align-items-center order-1 order-lg-2\">\n                  <img\n                    src=\"https://mdbootstrap.com/img/Photos/new-templates/bootstrap-registration/draw1.png\"\n                    className=\"img-fluid\"\n                    alt=\"Sample image\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Signup;\n","/home/root-pc/Desktop/INTERN/projects/my-app/src/components/Head.tsx",[],"/home/root-pc/Desktop/INTERN/projects/my-app/src/components/PageNotFound.tsx",["60"],{"ruleId":"61","severity":1,"message":"62","line":6,"column":9,"nodeType":"63","messageId":"64","endLine":6,"endColumn":15},{"ruleId":"61","severity":1,"message":"65","line":6,"column":16,"nodeType":"63","messageId":"64","endLine":6,"endColumn":20},{"ruleId":"61","severity":1,"message":"66","line":6,"column":36,"nodeType":"63","messageId":"64","endLine":6,"endColumn":41},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"61","severity":1,"message":"71","line":2,"column":8,"nodeType":"63","messageId":"64","endLine":2,"endColumn":12},{"ruleId":"61","severity":1,"message":"65","line":4,"column":18,"nodeType":"63","messageId":"64","endLine":4,"endColumn":22},{"ruleId":"61","severity":1,"message":"72","line":79,"column":10,"nodeType":"63","messageId":"64","endLine":79,"endColumn":15},{"ruleId":"61","severity":1,"message":"73","line":79,"column":17,"nodeType":"63","messageId":"64","endLine":79,"endColumn":25},{"ruleId":"61","severity":1,"message":"74","line":124,"column":9,"nodeType":"63","messageId":"64","endLine":124,"endColumn":13},{"ruleId":"75","severity":1,"message":"76","line":182,"column":13,"nodeType":"77","endLine":186,"endColumn":14},{"ruleId":"78","severity":1,"message":"79","line":183,"column":20,"nodeType":"80","messageId":"81","endLine":183,"endColumn":34},{"ruleId":"75","severity":1,"message":"82","line":190,"column":15,"nodeType":"77","endLine":190,"endColumn":18},{"ruleId":"61","severity":1,"message":"83","line":1,"column":41,"nodeType":"63","messageId":"64","endLine":1,"endColumn":44},{"ruleId":"61","severity":1,"message":"84","line":1,"column":46,"nodeType":"63","messageId":"64","endLine":1,"endColumn":49},{"ruleId":"61","severity":1,"message":"85","line":1,"column":10,"nodeType":"63","messageId":"64","endLine":1,"endColumn":14},{"ruleId":"61","severity":1,"message":"86","line":1,"column":16,"nodeType":"63","messageId":"64","endLine":1,"endColumn":21},{"ruleId":"61","severity":1,"message":"87","line":1,"column":23,"nodeType":"63","messageId":"64","endLine":1,"endColumn":29},{"ruleId":"61","severity":1,"message":"88","line":1,"column":31,"nodeType":"63","messageId":"64","endLine":1,"endColumn":39},{"ruleId":"61","severity":1,"message":"89","line":6,"column":9,"nodeType":"63","messageId":"64","endLine":6,"endColumn":17},{"ruleId":"61","severity":1,"message":"90","line":10,"column":9,"nodeType":"63","messageId":"64","endLine":10,"endColumn":23},{"ruleId":"91","severity":1,"message":"92","line":95,"column":19,"nodeType":"77","endLine":99,"endColumn":21},{"ruleId":"93","severity":1,"message":"94","line":6,"column":7,"nodeType":"77","endLine":6,"endColumn":1999},"@typescript-eslint/no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Route' is defined but never used.","no-native-reassign",["95"],"no-negated-in-lhs",["96"],"'logo' is defined but never used.","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","'view' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Row' is defined but never used.","'Col' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'Checkbox' is defined but never used.","'onFinish' is assigned a value but never used.","'onFinishFailed' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]